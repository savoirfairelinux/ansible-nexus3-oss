---
nexus_version: '3.1.0-04'
nexus_package: "nexus-{{ nexus_version }}-unix.tar.gz"
nexus_download_dir: '/tmp'
nexus_os_group: 'nexus'
nexus_os_user: 'nexus'
nexus_installation_dir: '/opt'
nexus_data_dir: '/var/nexus'
nexus_timezone: 'UTC' # java timezone
nexus_tmp_dir: '/tmp/nexus'

nexus_admin_password: 'changeme' # Note : admin password change subsequent to first-time install is *not implemented* yet
nexus_anonymous_access: false

public_hostname: 'nexus.vm'

nexus_branding_header: ""
nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"

httpd_setup_enable: false
httpd_ssl_certificate_file: 'files/nexus.vm.crt'
httpd_ssl_certificate_key_file: 'files/nexus.vm.key'


ldap_connections: []
# example ldap config :
#  - ldap_name: 'My Company LDAP' # used as a key to update the ldap config
#    ldap_protocol: 'ldaps' # ldap or ldaps
#    ldap_hostname: 'ldap.mycompany.com'
#    ldap_port: 636
#    ldap_search_base: 'dc=mycompany,dc=net'
#    ldap_user_base_dn: 'ou=users'
#    ldap_user_object_class: 'inetOrgPerson'
#    ldap_user_id_attribute: 'uid'
#    ldap_user_real_name_attribute: 'cn'
#    ldap_user_email_attribute: 'mail'
#    ldap_group_base_dn: 'ou=groups'
#    ldap_group_object_class: 'posixGroup'
#    ldap_group_id_attribute: 'cn'
#    ldap_group_member_attribute: 'memberUid'
#    ldap_group_member_format: '${username}'

# also see _nexus_privilege_defaults below
nexus_privileges:
  - name: all-repos-read # used as key to update a privilege
    description: 'Read & Browse access to all repos'
    repository: '*'
    actions:
      - read
      - browse

nexus_roles:
  - id: Developpers # can map to a LDAP group id, also used as a key to update a role
    name: developers
    description: All developers
    privileges:
      - nx-search-read
      - all-repos-read
    roles: []

nexus_local_users: []
# example user item :
#  - username: jenkins # used as key to update
#    first_name: Jenkins
#    last_name: CI
#    email: support@company.com
#    password: "s3cr3t"
#    roles:
#      - developers

nexus_delete_default_repos: false

nexus_delete_default_blobstore: false

nexus_blobstores: []
# example blobstore item :
# - name: separate-storage
#   path: /mnt/custom/path

nexus_repos_docker_proxy: []
# - name: central
#   remote_url: 'https://repo1.maven.org/maven2/'
#   layout_policy: permissive
# - name: jboss
#   remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'

nexus_repos_docker_hosted: []
# - name: production-docker
#   v1_enabled: false
#   write_policy: allow_once

nexus_repos_docker_group: []
# - name: public
#   member_repos:
#     - central
#     - jboss
#

# also see _nexus_repos_maven_defaults below
nexus_repos_maven_proxy: []
# - name: central
#   remote_url: 'https://repo1.maven.org/maven2/'
#   layout_policy: permissive
# - name: jboss
#   remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'
# example with a login/password :
# - name: secret-remote-repo
#   remote_url: 'https://company.com/repo/secure/private/go/away'
#   remote_username: 'username'
#   remote_password: 'secret'

nexus_repos_maven_hosted: []
# - name: private-release
#   version_policy: release
#   write_policy: allow_once
#
nexus_repos_maven_group: []
# - name: public
#   member_repos:
#     - central
#     - jboss
#
nexus_scheduled_tasks: []
#  example task to compact blobstore :
#  - name: compact-blobstore
#    cron: '0 0 22 * * ?'
#    typeId: blobstore.compact
#    taskProperties:
#      blobstoreName: 'default' # all task attributes are stored as strings by nexus internally

_nexus_privilege_defaults:
  type: repository-view
  format: maven2
  actions:
    - read

_nexus_repos_maven_defaults:
  blob_store: default # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  version_policy: release # release, snapshot or mixed
  layout_policy: strict # strict or permissive
  write_policy: allow_once # allow_once or allow

_nexus_repos_docker_defaults:
  blob_store: default # Note : cannot be updated once the repo has been created
  strict_content_validation: true
  v1_enabled: false # enable docker v1 API
  write_policy: allow_once # allow_once or allow
